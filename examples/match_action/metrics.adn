internal 
{
	record: Map<string, Instant>
  latency: Vec<float>
}

fn init() {
}

fn req(rpc_req) {
	record.set(rpc_req.get('name'), current_time());
	send(rpc_req, NET);
}

fn resp(rpc_resp) {
  rpc_name := rpc_resp.get('name');
  match(record.get(rpc_name)) {
    Some(t) => {
      lat := time_diff(current_time(), t);
      latency.set(latency.size(), lat);
    }
    None => {
    }
  };
  send(rpc_resp, APP);
}